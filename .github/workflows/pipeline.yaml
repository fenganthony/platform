name: CI/CD (GHCR + optional Helm)

on:
  push:
    branches: [ "anthony_feature" ]   # 需要可自行擴充或改成 ["**"]
    tags:     [ "v*" ]
  workflow_dispatch:
    inputs:
      version:
        description: "Image version (e.g. 1.0.0). If set, overrides tag logic."
        required: false
      helm_lint:
        description: "Run Helm lint/template/dry-run"
        type: boolean
        default: false
      helm_chart_path:
        description: "Path to Helm chart"
        default: "./java-app"
      helm_release:
        description: "Release name (for dry-run)"
        default: "java-app"
      helm_namespace:
        description: "Namespace (for dry-run)"
        default: "default"

permissions:
  contents: read
  packages: write   # GHCR push 需要

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/fenganthony/spring-hello-problem
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 決定要使用的 tag
      - name: Compute EFFECTIVE_TAG
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ inputs.version }}" ]]; then
            TAG="${{ inputs.version }}"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
          elif [[ "${{ github.ref }}" == "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
            TAG="latest"
          else
            TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "EFFECTIVE_TAG=$TAG" >> $GITHUB_ENV
          echo "Using tag: $TAG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=${{ env.EFFECTIVE_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      # ---------- Optional Helm checks ----------
      - name: Setup Helm
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.helm_lint }}
        uses: azure/setup-helm@v4

      - name: helm lint
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.helm_lint }}
        run: helm lint "${{ inputs.helm_chart_path }}"

      - name: helm template (render manifests)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.helm_lint }}
        run: |
          helm template "${{ inputs.helm_release }}" "${{ inputs.helm_chart_path }}" \
            --namespace "${{ inputs.helm_namespace }}" \
            --set image.repository="${{ env.IMAGE }}" \
            --set image.tag="${{ env.EFFECTIVE_TAG }}"

      - name: helm install --dry-run --debug
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.helm_lint }}
        run: |
          helm install "${{ inputs.helm_release }}" "${{ inputs.helm_chart_path }}" \
            --namespace "${{ inputs.helm_namespace }}" \
            --create-namespace \
            --dry-run --debug \
            --set image.repository="${{ env.IMAGE }}" \
            --set image.tag="${{ env.EFFECTIVE_TAG }}"
